{"version":3,"sources":["Components/player.js","Components/song.js","Components/librarySong.js","Components/library.js","Components/nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","songs","setCurrentSong","setSongs","useState","currentTime","duration","animationPercentage","songInfo","setSongInfo","timeUpdateHandler","e","current","target","getTime","time","Math","floor","slice","activeLibraryHandler","newSongs","map","song","id","active","skipTrackHandler","direction","a","currentIndex","findIndex","length","play","useEffect","paused","songEndHandler","className","onChange","value","min","max","type","onClick","icon","faAngleLeft","size","pause","faPause","faPlay","faAngleRight","onLoadedMetadata","onTimeUpdate","ref","src","audio","onEnded","Song","cover","alt","name","artist","LibrarySong","songSelectHandler","library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","color","uuidv4","App","useRef","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7be67656.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import Font Awesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  // songInfo,\n  // setSongInfo,\n  audioRef,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) => {\n  // Event Handlers\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    // calculate percentage\n    // const roundedCurrent = Math.round(current);\n    // const roundedDuration = Math.round(duration);\n    // const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      // animationPercentage: animation,\n    });\n  };\n\n  // State\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  const activeLibraryHandler = () => {\n    const newSongs = songs.map((song) => {\n      if (song.id === currentSong.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  };\n\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    }\n\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        activeLibraryHandler(songs[currentIndex - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n\n  useEffect(() => {\n    if (isPlaying && audioRef.current.paused) {\n      audioRef.current.play();\n    }\n  }, [isPlaying, currentSong]);\n\n  // const trackAnim = {\n  //   transform: `translateX(${songInfo.animationPercentage}%)`,\n  // };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        {/* <div\n        style={{\n          background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\n        }}\n        className=\"track\"\n      > */}\n        <input\n          onChange={dragHandler}\n          min={0}\n          max={songInfo.duration || 0}\n          value={songInfo.currentTime}\n          type=\"range\"\n        />\n        {/* <div  className=\"animate-track\" ></div> */}\n        {/* </div> */}\n        <p>\n          {songInfo.duration\n            ? getTime(songInfo.duration - songInfo.currentTime)\n            : \"0:00\"}\n        </p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          icon={faAngleLeft}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          icon={isPlaying ? faPause : faPlay}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n          className=\"skip-forward\"\n          icon={faAngleRight}\n          size=\"2x\"\n        />\n      </div>\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nconst Song = ({ currentSong }) => {\n  return (\n    <div className=\"song-container\">\n      <img src={currentSong.cover} alt={currentSong.name} />\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import React from \"react\";\n\nconst LibrarySong = ({\n  isPlaying,\n  song,\n  songs,\n  setCurrentSong,\n  id,\n  audioRef,\n  setSongs,\n}) => {\n  const songSelectHandler = async () => {\n    // const selectedSong = songs.filter((state) => state.id === id);\n\n    await setCurrentSong(song);\n    // Add active state\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    await setSongs(newSongs);\n    if (isPlaying) audioRef.current.play();\n    // if (isPlaying) {\n    //   const playPromise = audioRef.current.play();\n    //   if (playPromise !== undefined) {\n    //     playPromise.then((audio) => {\n    //       audioRef.current.play();\n    //     });\n    //   }\n    // }\n  };\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img src={song.cover} alt={song.name} />\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import React from \"react\";\nimport LibrarySong from \"./librarySong\";\n\nconst library = ({\n  libraryStatus,\n  setSongs,\n  songs,\n  setCurrentSong,\n  audioRef,\n}) => {\n  return (\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            songs={songs}\n            setCurrentSong={setCurrentSong}\n            song={song}\n            setSongs={setSongs}\n            id={song.id}\n            key={song.id}\n            audioRef={audioRef}\n            // isPlaying={isPlaying}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// export default import(\"@fortawesome/fontawesome-svg-core\").Library;\nexport default library;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\n  return (\n    <nav>\n      <h1>Waves</h1>\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\n        Library\n        <FontAwesomeIcon icon={faMusic} />\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n    {\n      name: \"Trenches\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg\",\n      artist: \"Philanthrope, Sleepy Fish\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10247\",\n      color: [\"#2B2F1D\", \"#D94F42\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Witch Hat\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/c209a7df7b9bc133dfff73ce86ebc3c57c2b73dd-1024x1024.jpg\",\n      artist: \"Sleepy Fish\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10017\",\n      color: [\"#CCE0E1\", \"#225173\"],\n      id: uuidv4(),\n      active: false,\n    },\n  ];\n}\n\nexport default chillHop;\n","import React, { useState, useRef } from \"react\";\n// import styles\nimport \"./styles/app.scss\";\n// Importing components\nimport Player from \"./Components/player\";\nimport Song from \"./Components/song\";\nimport Library from \"./Components/library\";\nimport Nav from \"./Components/nav\";\n// import data\nimport data from \"./data.js\";\n\nfunction App() {\n  // Ref\n  const audioRef = useRef(null);\n  // State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[4]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  // const [songInfo, setSongInfo] = useState({\n  //   currentTime: 0,\n  //   duration: 0,\n  // });\n  // const timeUpdateHandler = (e) => {\n  //   const current = e.target.currentTime;\n  //   const duration = e.target.duration;\n  //   setSongInfo({ ...songInfo, currentTime: current, duration });\n  // };\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        // songInfo={songInfo}\n        // setSongInfo={setSongInfo}\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        libraryStatus={libraryStatus}\n        setSongs={setSongs}\n        audioRef={audioRef}\n        setCurrentSong={setCurrentSong}\n        songs={songs}\n        // isPlayng={isPlaying}\n      />\n      {/* <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n      ></audio> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}